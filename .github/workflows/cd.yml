name: cd

on:
  push:
    branches:
    - main
    tags:
    - "*"
  pull_request:
    branches:
    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install pypa/build
      run: >-
        python3 -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyflow-wellies  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  localbuild-publish-to-test-pypi:
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyflow-wellies
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: True
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install pypa/build
        run: python3 -m pip install build tomlkit --user
      - name: disable scm local version
        run: |
            from pathlib import Path

            import tomlkit

            pyproject_toml_path = Path.cwd().joinpath('pyproject.toml')
            pyproject_toml_txt = pyproject_toml_path.read_text()
            pyproject_toml = tomlkit.loads(pyproject_toml_txt)
            setuptools_scm_section = pyproject_toml['tool']['setuptools_scm']
            setuptools_scm_section['local_scheme'] = 'no-local-version'
            patched_pyproject_toml_txt = tomlkit.dumps(pyproject_toml)
            pyproject_toml_path.write_text(patched_pyproject_toml_txt)
        shell: python
      - name: pretend pyproject.toml is unchanged
        run: |
          git diff --color=always
          git update-index --assume-unchanged pyproject.toml
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
